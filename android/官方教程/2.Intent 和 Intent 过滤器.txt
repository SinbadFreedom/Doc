Intent 和 Intent 过滤器
===

Intent 是一个消息传递对象，您可以使用它从其他应用组件请求操作。其基本用例主要包括以下三个：
- 启动 Activity

- 启动服务
- 传递广播

Intent 类型
---

ntent 分为两种类型
- 显式 Intent
按名称（完全限定类名）指定要启动的组件。
- 隐式 Intent
不会指定特定的组件，而是声明要执行的常规操作，从而允许其他应用中的组件来处理它。

构建 Intent
---

Intent 对象携带了 Android 系统用来确定要启动哪个组件的信息。

Intent 中包含的主要信息如下：

- 组件名称
如果没有组件名称，则 Intent 是隐式的，且系统将根据其他 Intent 信息（例如，以下所述的操作、数据和类别）决定哪个组件应当接收 Intent。 因此，如需在应用中启动特定的组件，则应指定该组件的名称。

- 操作
您可以指定自己的操作，供 Intent 在您的应用内使用（或者供其他应用在您的应用中调用组件）。但是，您通常应该使用由 Intent 类或其他框架类定义的操作常量。如果定义自己的操作，请确保将应用的软件包名称作为前缀。

- 数据
一个包含应处理 Intent 组件类型的附加信息的字符串。 您可以将任意数量的类别描述放入一个 Intent 中，但大多数 Intent 均不需要类别。

- Extra
携带完成请求操作所需的附加信息的键值对。正如某些操作使用特定类型的数据 URI 一样，有些操作也使用特定的 extra。
Intent 类将为标准化的数据类型指定多个 EXTRA_* 常量。如需声明自己的 extra 键（对于应用接收的 Intent），请确保将应用的软件包名称作为前缀。


- 标志
在 Intent 类中定义的、充当 Intent 元数据的标志。 标志可以指示 Android 系统如何启动 Activity（例如，Activity 应属于哪个任务），以及启动之后如何处理（例如，它是否属于最近的 Activity 列表）。


显式 Intent 示例
---
显式 Intent 是指用于启动某个特定应用组件（例如，应用中的某个特定 Activity 或服务）的 Intent。要创建显式 Intent，请为 Intent 对象定义组件名称 ― Intent 的所有其他属性均为可选属性。

隐式 Intent 示例
---
隐式 Intent 指定能够在可以执行相应操作的设备上调用任何应用的操作。 如果您的应用无法执行该操作而其他应用可以，且您希望用户选取要使用的应用，则使用隐式 Intent 非常有用。


强制使用应用选择器
---
如果有多个应用响应隐式 Intent，则用户可以选择要使用的应用，并将其设置为该操作的默认选项。

接收隐式 Intent
---
要公布应用可以接收哪些隐式 Intent，请在清单文件中使用 <intent-filter> 元素为每个应用组件声明一个或多个 Intent 过滤器。

限制对组件的访问
---
如果必须确保只有您自己的应用才能启动您的某一组件，请针对该组件将 exported 属性设置为 "false"。


过滤器示例
---
第一个 Activity MainActivity 是应用的主要入口点。当用户最初使用启动器图标启动应用时，该 Activity 将打开：

ACTION_MAIN 操作指示这是主要入口点，且不要求输入任何 Intent 数据。
CATEGORY_LAUNCHER 类别指示此 Activity 的图标应放入系统的应用启动器。 如果 <activity> 元素未使用 icon 指定图标，则系统将使用 <application> 元素中的图标。
这两个元素必须配对使用，Activity 才会显示在应用启动器中。

第二个 Activity ShareActivity 旨在便于共享文本和媒体内容。 尽管用户可以通过从 MainActivity 导航进入此 Activity，但也可以从发出隐式 Intent（与两个 Intent 过滤器之一匹配）的另一应用中直接进入 ShareActivit

使用待定 Intent
---
待定 Intent 的主要用例：

- 声明用户使用您的通知执行操作时所要执行的 Intent（Android 系统的 NotificationManager 执行 Intent）。
- 声明用户使用您的 应用小部件执行操作时要执行的 Intent（主屏幕应用执行 Intent）。
- 声明未来某一特定时间要执行的 Intent（Android 系统的 AlarmManager 执行 Intent）。

PendingIntent.getActivity()，适用于启动 Activity 的 Intent。
PendingIntent.getService()，适用于启动 Service 的 Intent。
PendingIntent.getBroadcast()，适用于启动 BroadcastReceiver 的 Intent。


Intent 解析
---
当系统收到隐式 Intent 以启动 Activity 时，它根据以下三个方面将该 Intent 与 Intent 过滤器进行比较，搜索该 Intent 的最佳 Activity：

- Intent 操作
- Intent 数据（URI 和数据类型）
- Intent 类别


操作测试
---

要指定接受的 Intent 操作，Intent 过滤器既可以不声明任何 <action> 元素，也可以声明多个此类元素。
要通过此过滤器，您在 Intent 中指定的操作必须与过滤器中列出的某一操作匹配。
如果该过滤器未列出任何操作，则 Intent 没有任何匹配项，因此所有 Intent 均无法通过测试。 但是，如果 Intent 未指定操作，则会通过测试（只要过滤器至少包含一个操作）。

类别测试
---
要指定接受的 Intent 类别， Intent 过滤器既可以不声明任何 <category> 元素，也可以声明多个此类元素。
若要使 Intent 通过类别测试，则 Intent 中的每个类别均必须与过滤器中的类别匹配。反之则未必然，Intent 过滤器声明的类别可以超出 Intent 中指定的数量，且 Intent 仍会通过测试。 
因此，不含类别的 Intent 应当始终会通过此测试，无论过滤器中声明何种类别均是如此。


数据测试
---
要指定接受的 Intent 数据， Intent 过滤器既可以不声明任何 <data> 元素，也可以声明多个此类元素。


Intent 匹配
---
