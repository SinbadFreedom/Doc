应用权限最佳做法
===

使用Android权限的原则
---
＃1：仅使用您的应用所需的权限才能工作。
＃2：注意库所需的权限。
＃3：保持透明。
＃4：使系统访问显式。

Android 6.0及更高版本的权限
---
Android 6.0 Marshmallow引入了一种新的权限模型，允许应用程序在运行时从用户请求权限，而不是在安装之前。


丢失音频焦点后暂停媒体
---

确定运行实例的设备
---
在这种情况下，您需要一个唯一标识符来确定运行应用程序实例的设备。

应用程序可以具有特定于设备的偏好或消息传递（例如，为云中的用户保存特定于设备的播放列表，使得他们可以为他们的汽车和家中具有不同的播放列表）。常见的解决方案是利用设备标识符，例如Device IMEI，但这需要Device ID and call information 权限组（PHONE在M +中）。它还使用无法重置的标识符，并在所有应用程序之间共享。

使用这些类型的标识符有两种选择：
1.使用com.google.android.gms.iidInstanceID API。 将为您的应用程序实例返回唯一的设备标识符。结果是应用程序实例作用域标识符，可以在存储有关应用程序的信息时用作键，如果用户重新安装应用程序，则会重置该标识符。 getInstance(Context context).getID()
2.使用基本的系统功能创建自己的标识符，该标识符的作用域是应用程序的存储空间randomUUID()。

为广告或用户分析创建唯一标识符
---
