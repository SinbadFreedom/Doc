本地化您的应用
===

概述：Android中的资源切换
---

为什么默认资源很重要
---
每当应用程序在您没有提供特定于语言环境的文本的区域设置中运行时，Android都会从中加载默认字符串 res/values/strings.xml。
如果缺少此默认文件，或者缺少应用程序所需的字符串，则您的应用程序不会运行并显示错误。

使用资源进行本地化
---

- 如何创建默认资源

文本字符串res/values/strings.xml应使用默认语言，这是您希望应用程序的大多数用户说出的语言。

默认资源集还必须包括任何默认的drawable和布局，并且可以包括其他类型的资源，例如动画：

res/drawable/（所需目录至少包含一个图形文件，适用于Google Play上的应用图标）
res/layout/ （所需目录包含定义默认布局的XML文件）
res/anim/（如果你有任何 文件夹需要）res/anim-<qualifiers>
res/xml/（如果你有任何 文件夹需要）res/xml-<qualifiers>
res/raw/（如果你有任何 文件夹需要）res/raw-<qualifiers>


如何创建替代资源
---
本地化应用程序的很大一部分是为不同语言提供替代文本。在某些情况下，您还提供了替代图形，声音，布局和其他特定于语言环境的资源。

应用程序可以指定许多 目录，每个目录都有不同的限定符。要为其他语言环境创建备用资源，请使用指定语言或语言区域组合的限定符。（资源目录的名称必须符合提供替代资源中描述的命名方案 ，否则您的应用程序无法编译。）res/<qualifiers>/


哪些资源优先？
---
如果多个资源文件与设备的配置匹配，则Android会在决定使用哪个文件时遵循一组规则。在可以在资源目录名称中指定的限定符中，locale几乎总是优先。


管理本地化的字符串
---
将所有字符串移动到strings.xml中，在构建应用程序时，不要对任何字符串进行硬编码。
要标记不应翻译的文本，请使用<xliff:g> 占位符标记。

本地化清单
---

本地化提示
---
确保包括 res/drawable/和res/values/文件夹（而不在文件夹名称中的任何附加修饰）包含的所有图像和您的应用程序需要的文字。

测试本地化应用
---
- 在设备上进行测试
要更改设备上的区域设置或语言，请使用“设置”应用。
- 在模拟器上测试
创建和使用自定义区域设置
将模拟器设置为Android系统映像中不可用的语言环境时，系统本身将以其默认语言显示。但是，您的应用应该正确本地化。
- 从adb shell更改模拟器区域设置

测试默认资源
---



