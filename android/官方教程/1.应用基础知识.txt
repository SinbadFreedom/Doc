安卓官方文档， 不用翻墙的地址:
https://developer.android.google.cn/

英文中文文档可以采用google的翻译工具。

应用基础知识
https://developer.android.google.cn/guide/components/fundamentals

应用组件

- Activity
Activity 表示具有用户界面的单一屏幕。Activity 作为 Activity 的子类实现

- 服务
服务是一种在后台运行的组件，用于执行长时间运行的操作或为远程进程执行作业。 服务不提供用户界面。服务作为 Service 的子类实现。

-内容提供程序
内容提供程序管理一组共享的应用数据。内容提供程序作为 ContentProvider 的子类实现，并且必须实现让其他应用能够执行事务的一组标准 API。

-广播接收器
广播接收器是一种用于响应系统范围广播通知的组件。尽管广播接收器不会显示用户界面，但它们可以创建状态栏通知，在发生广播事件时提醒用户。
广播接收器作为 BroadcastReceiver 的子类实现，并且每条广播都作为 Intent 对象进行传递。

Android 系统设计的独特之处在于，任何应用都可以启动其他应用的组件。Android 应用并没有单一入口点（例如，没有 main() 函数）。

启动组件
四种组件类型中的三种 ― Activity、服务和广播接收器 ― 通过名为 Intent 的异步消息进行启动。
您可以通过将 Intent 传递到 startActivity() 或 startActivityForResult()（当您想让 Activity 返回结果时）来启动 Activity（或为其安排新任务）。
您可以通过将　Intent 传递到 startService() 来启动服务（或对执行中的服务下达新指令）。 或者，您也可以通过将 Intent 传递到 bindService() 来绑定到该服务。
您可以通过将 Intent 传递到 sendBroadcast()、sendOrderedBroadcast() 或 sendStickyBroadcast() 等方法来发起广播；
您可以通过在 ContentResolver 上调用 query() 来对内容提供程序执行查询。

清单文件
在 Android 系统启动应用组件之前，系统必须通过读取应用的 AndroidManifest.xml 文件（“清单”文件）确认组件存在。 您的应用必须在此文件中声明其所有组件，该文件必须位于应用项目目录的根目录中。

除了声明应用的组件外，清单文件还有许多其他作用，如：
确定应用需要的任何用户权限，如互联网访问权限或对用户联系人的读取权限
根据应用使用的 API，声明应用所需的最低 API 级别
声明应用使用或需要的硬件和软件功能，如相机、蓝牙服务或多点触摸屏幕
应用需要链接的 API 库（Android 框架 API 除外），如 Google 地图库
其他功能


声明组件
清单文件的主要任务是告知系统有关应用组件的信息。

在 <application> 元素中，android:icon 属性指向标识应用的图标所对应的资源。
在 <activity> 元素中，android:name 属性指定 Activity 子类的完全限定类名，android:label 属性指定用作 Activity 的用户可见标签的字符串。
您必须通过以下方式声明所有应用组件：

Activity 的 <activity> 元素
服务的 <service> 元素
广播接收器的 <receiver> 元素
内容提供程序的 <provider> 元素


您包括在源代码中，但未在清单文件中声明的 Activity、服务和内容提供程序对系统不可见，因此也永远不会运行。 不过，广播接收器可以在清单文件中声明或在代码中动态创建（如 BroadcastReceiver 对象）并通过调用 registerReceiver() 在系统中注册。


声明组件功能
如上文启动组件中所述，您可以使用 Intent 来启动 Activity、服务和广播接收器。 您可以通过在 Intent 中显式命名目标组件（使用组件类名）来执行此操作。 不过，Intent 的真正强大之处在于隐式 Intent 概念。 隐式 Intent 的作用无非是描述要执行的操作类型（还可选择描述您想执行的操作所针对的数据），让系统能够在设备上找到可执行该操作的组件，并启动该组件。 如果有多个组件可以执行 Intent 所描述的操作，则由用户选择使用哪一个组件。
当您在应用的清单文件中声明 Activity 时，可以选择性地加入声明 Activity 功能的 Intent 过滤器，以便响应来自其他应用的 Intent。 您可以通过将 <intent-filter> 元素作为组件声明元素的子项进行添加来为您的组件声明 Intent 过滤器。


声明应用要求
您必须通过在清单文件中声明设备和软件要求，为您的应用支持的设备类型明确定义一个配置文件。


应用资源
对于您的 Android 项目中包括的每一项资源，SDK 构建工具都会定义一个唯一的整型 ID，您可以利用它来引用应用代码或 XML 中定义的其他资源中的资源。


































